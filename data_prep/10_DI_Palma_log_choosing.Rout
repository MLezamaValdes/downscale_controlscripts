
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # DI on Palma
> 
> y=1
> m=1
> 
> 
> # install.packages("/home/l/llezamav/R/CAST_0.4.3.tar.gz", repos = NULL,
> #                 lib="/home/l/llezamav/R/")
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(parallel)
> library(CAST, lib.loc="/home/l/llezamav/R/")
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
> 
> `%notin%` <- Negate(`%in%`)
> 
> nc <- detectCores()
> cl <- makeCluster(nc-3)
> 
> datpath <- "/scratch/tmp/llezamav/stack_extraction/"
> #datpath <- "D:/new_downscaling/extraction/"
> 
> # set month to look at
> time_range <- readRDS("/scratch/tmp/llezamav/time_range.rds")
> ym <- substring(time_range[[y]][[m]][[1]][[1]], 1, 7)
> 
> ###################### START WITH POTT3 ALREADY FROM SERVER ###########################################
> 
> 
> ###################### prep variables ###########################################
> 
> pott3 <- read.csv2(paste0(datpath, "pott3_new_",ym, ".csv"))
> 
> # convert time to numeric
> pott3$time_num <- as.numeric(as.factor(pott3$time))
> # get only relevant variables for DI 
> divars <- names(pott3)[c(1:4, 6:7, 9:14, 16:17, 20)]
> print(divars)
 [1] "Modis"        "ia"           "hs"           "Landsat"      "xd"          
 [6] "yd"           "dem"          "slope"        "aspect"       "TWI"         
[11] "soilraster"   "landcoverres" "swir6"        "swir7"        "time_num"    
> potDI <- pott3[divars]
> 
> ##### 1 get 150.000 random samples per month ###########################################
> 
> set.seed(100)
> # to maintain data distribution
> rnds <- sample(rownames(potDI), 150000)
> randsamples <- potDI[rnds,]
> 
> ###################### put rest of samples in potDI ###########################################
> 
> potDI_ds <- subset(potDI, rownames(potDI) %notin% rnds)
> 
> ### 2 sample selection via DI ###################################################################
> 
> ### TEST DI LOOP ###################################################################
> 
> 
>     # # # choose 10 (new) random points to start with
>     # trn <- sample(rownames(potDI_ds), 10) # training data (n=10) rownames
>     # DItrain <- potDI_ds[trn,]
>     # 
>     # # dissimilarity is being calculated for the rest of the dataset
>     # # what to do about chosen and discarded ones? 
>     # ndatrn <- !(rownames(potDI_ds) %in% trn) # which in potDI_ds are not in DItrain?
>     # DInewdata <- potDI_ds[ndatrn,]
>     # 
>     # potDI_ds <- DInewdata
>     # randsamples <- DItrain
> 
> #### test end #################
> 
> registerDoParallel(cl)
> 
> samples <- randsamples
> 
> i=0
> t0prev <- 0
> x <- 3.5
> repeat {
+   di <- aoa(newdata=potDI_ds, train=samples, cl=cl)
+   t <- table(di$AOA)
+   
+   diff_out_aoa <- t[1]-t0prev
+   t0prev <- t[1]
+   print(paste0("diff out of AOA to previous step: ", diff_out_aoa))
+   
+   print(paste0("iteration = ", i))
+   print("AOA out / in: ")
+   print(t)
+   
+   choose <- round(log(t[1])**x)
+   print(paste0("choose ", choose, "most dissimilar samples"))
+   
+   most_diss <- tail(sort(di$DI), choose)
+   
+   # add most dissimlar to samples
+   most_diss_ds <- subset(potDI_ds, rownames(potDI_ds) %in% names(most_diss))
+   samples <- rbind(samples, most_diss_ds)
+   
+   # take most dissimlar away from potDI_ds 
+   potDI_ds <- subset(potDI_ds, rownames(potDI_ds) %notin% names(most_diss))
+   
+   if(any(di$AOA==0)==FALSE){
+     break
+   }
+   
+   i=i+1
+ }
note: variables were not weighted either because no weights or model were given,
    or no variable importance could be retrieved from the given model.
    Check caret::varImp(model)
note: Either no model was given or no CV was used for model training. The DI threshold is therefore based on all training data
[1] "diff out of AOA to previous step: 138485"
[1] "iteration = 0"
[1] "AOA out / in: "

      0       1 
 138485 2711515 
[1] "choose 5709most dissimilar samples"
note: variables were not weighted either because no weights or model were given,
    or no variable importance could be retrieved from the given model.
    Check caret::varImp(model)
note: Either no model was given or no CV was used for model training. The DI threshold is therefore based on all training data
